// 将键绑定放在此文件中以覆盖默认值
[
  //---------- 选项操作 ----------//
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "tab",
    "command": "selectNextQuickFix",
    "when": "quickFixWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevQuickFix",
    "when": "quickFixWidgetVisible"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "snippetWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "snippetWidgetVisible"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    // "key": "shift+tab", 不起作用，无法解决
    "key": "alt+tab",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen",
  },
  {
    "key": "tab",
    "command": "-tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+tab",
    "command": "-outdent",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && vim.mode=='Insert' && !suggestWidgetVisible && !codeActionMenuVisible && !quickFixWidgetVisible && !snippetWidgetVisible && !snippetTabstopHighlightActive && !inSnippetMode && !hasSnippetCompletions"
  },
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && !editorReadonly && vim.mode=='Insert' && !suggestWidgetVisible && !codeActionMenuVisible && !quickFixWidgetVisible && !snippetWidgetVisible && !snippetTabstopHighlightActive && !inSnippetMode && !hasSnippetCompletions"
  },
  //---------- 注释代码 ----------//
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  //---------- 窗口操作 ----------//
  {
    "key": "space k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "space j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "space h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "space l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+shift+h",
    "command": "workbench.action.moveEditorToLeftGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+shift+l",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.focusPanel",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "panelFocus"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "alt+shift+q",
    "command": "workbench.action.closePanel",
    "when": "panelFocus"
  },
  {
    "key": "alt+shift+q",
    "command": "workbench.action.closeSidebar",
    "when": "sideBarFocus"
  },
  {
    "key": "alt+shift+q",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.navigateLeft",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.navigateRight",
    "when": "panelFocus"
  },
  //---------- 搜索与指令 ----------//
  {
    "key": "space f",
    "command": "leap.find",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "space e f",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.showAllSymbols",
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.showCommands",
  },
  //---------- 格式化代码 ----------//
  {
    "key": "space g f",
    "command": "editor.action.formatDocument",
    "when": "editorTextFocus && vim.mode!='Insert'"
  },
  //---------- 代码块选中 ----------//
  {
    "key": "enter",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus && vim.mode!='Insert' && !vim.active"
  },
  {
    "key": "backspace",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus && vim.mode!='Insert' && !vim.active"
  },
  //---------- 运行和调试 ----------//
  {
    "key": "ctrl+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus && vim.mode=='Normal"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.debug.run",
    "when": "!inDebugMode"
  },
  {
    "key": "cmd+shift+r",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  //---------- 侧边资源管理器 ----------//
  {
    "key": "space w",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus && !filesExplorerFocus && vim.mode!='Insert'"
  },
  {
    "key": "space w",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus && vim.mode!='Insert'"
  },
  {
    "key": "space l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus && vim.mode!='Insert'"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+j",
    "command": "list.focusDown",
    "args": 5,
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+k",
    "command": "list.focusUp",
    "args": 5,
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.previousEditor",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+t",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d d",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d shift+d",
    "command": "moveFileToTrash",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "t",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y n",
    "command": "copyFilePath",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y p",
    "command": "copyRelativeFilePath",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "c w",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "/",
    "command": "list.find",
    "when": "filesExplorerFocus && !inputFocus"
  },
  //---------- End ----------//
  //---------- System Ban ----------//
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+r",
    "command": "-inlineChat.regenerate",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.terminal.chat.rerunRequest",
    "when": "terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "ctrl+/",
    "command": "-github.copilot.acceptCursorPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
  },
  {
    "key": "ctrl+/",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "-editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+t",
    "command": "-extension.vim_ctrl+t",
    "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showIncomingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showOutgoingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSubtypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSupertypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
]